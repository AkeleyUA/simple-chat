{"version":3,"sources":["components/Chat/Chat.js","components/Join/Join.js","components/InfoBar/InfoBar.js","components/Input/Input.js","Message/Message.js","components/Messages/Messages.js","App.js","index.js"],"names":["socket","useStyles","makeStyles","root","height","padding","display","justifyContent","flexDirection","alignItems","body","width","mt","marginTop","divider","backgroundColor","whiteText","color","Join","classes","useState","name","room","join","setJoin","err","setErr","changeHandler","event","target","value","className","Container","maxWidth","Typography","variant","Divider","flexItem","TextField","required","label","type","component","Paper","fullWidth","error","onChange","Button","size","onClick","preventDefault","to","Link","toolBar","btn","flexGrow","title","InfoBar","AppBar","position","Toolbar","inputWrapper","Input","message","setMessage","sendMessage","InputProps","input","endAdornment","IconButton","Icon","placeholder","onKeyPress","key","margin","yourMessage","text","borderRadius","wordBreak","yourText","avatar","caption","Message","user","trimmedName","trim","toLowerCase","Avatar","toUpperCase","ReactEmoji","emojify","border","overflow","toBottonBtn","bottom","left","transform","Messages","messages","followButtonClassName","map","index","paddingTop","Chat","location","setMessages","useEffect","queryString","parse","search","io","emit","off","on","console","log","App","path","exact","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8bbc6339.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport queryString from 'query-string'\nimport io from 'socket.io-client'\nimport {\n  Container, makeStyles, Paper\n} from '@material-ui/core'\nimport { InfoBar } from '../InfoBar/InfoBar'\nimport { Input } from '../Input/Input'\nimport { Messages } from '../Messages/Messages'\n\nlet socket\nconst useStyles = makeStyles({\n  root: {\n    marginTop: '2.5vh',\n    height: '95vh',\n    position: 'relative',\n    paddingTop: 24,\n  }\n})\n\n\nconst Chat = ({ location }) => {\n  const classes = useStyles()\n  const [join, setJoin] = useState({\n    name: '',\n    room: ''\n  })\n  const [messages, setMessages] = useState([])\n  const [message, setMessage] = useState('')\n\n  const ENDPOINT = 'localhost:5000'\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search)\n\n    socket = io(ENDPOINT)\n    socket.emit('join', { name, room }, () => { })\n\n    setJoin({ name, room })\n\n    return () => {\n      socket.emit('disconnect')\n      socket.off()\n    }\n  }, [ENDPOINT, location])\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessages([...messages, message])\n    })\n    return () => { socket.off() }\n  }, [messages])\n\n  console.log(message, messages)\n\n  const sendMessage = event => {\n    event.preventDefault()\n    if (message) {\n      socket.emit('sendMessage', message, () => { setMessage('') })\n    }\n  }\n\n  return (\n    <Container\n      maxWidth=\"md\"\n      className={classes.root}\n      component={Paper}\n    >\n      <InfoBar room={join.room} />\n      <Messages messages={messages} name={join.name} />\n      <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n    </Container>\n  )\n}\n\nexport { Chat }","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Paper, Container, Button, makeStyles, TextField, Typography, Divider, Icon } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n  root: {\n    height: '50%',\n    padding: '10%',\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  body: {\n    width:'100%',\n    height:'100vh'\n  },\n  mt: {\n    marginTop: 30\n  },\n  divider: {\n    backgroundColor: '#FFFFFF',\n    marginTop: 30,\n    height: 2\n  },\n  whiteText: {\n    color: '#FFFFFF'\n  }\n})\n\nlet socket\n\nconst Join = () => {\n  const classes = useStyles()\n  const [join, setJoin] = useState({\n    name: '',\n    room: ''\n  })\n  const [err, setErr] = useState({\n    name: false,\n    room: false\n  })\n\n  const validateHandler = event => {\n    if (!join.name) {\n      setErr({ ...err, name: true })\n      return event.preventDefault()\n    }\n    if (!join.room) {\n      setErr({ ...err, room: true })\n      return event.preventDefault()\n    }\n    return null\n  }\n\n  const changeHandler = event => {\n    setJoin({ ...join, [event.target.name]: event.target.value })\n    setErr({ ...err, [event.target.name]: false })\n  }\n\n  return (\n    <div\n      className={classes.body}\n    >\n      <Container\n        maxWidth=\"sm\"\n        className={classes.root}\n      >\n        <Typography variant=\"h5\" className={classes.whiteText}>React chat</Typography>\n        <Divider\n          flexItem\n          variant=\"fullWidth\"\n          className={classes.divider}\n        />\n        <TextField\n          required\n          className={classes.mt}\n          label=\"Логин\"\n          type=\"text\"\n          name=\"name\"\n          variant=\"filled\"\n          component={Paper}\n          fullWidth\n          error={err.name}\n          value={join.name}\n          onChange={changeHandler}\n        />\n        <TextField\n          className={classes.mt}\n          label=\"Комната\"\n          type=\"text\"\n          name=\"room\"\n          variant=\"filled\"\n          component={Paper}\n          fullWidth\n          error={err.room}\n          value={join.room}\n          onChange={changeHandler}\n        />\n        <Button\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          onClick={validateHandler}\n          variant=\"contained\"\n          color=\"primary\"\n          to={`/chat?name=${join.name}&room=${join.room}`}\n          className={classes.mt}\n          component={Link}\n        >\n          Войти\n        </Button>\n      </Container>\n    </div>\n  )\n}\n\nexport { Join }","import React, { useState } from 'react'\nimport { AppBar, Toolbar, Typography, Button, makeStyles } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n  toolBar: {\n    display: 'flex',\n  },\n  btn: {\n    flexGrow: 2\n  },\n  title: {\n    flexGrow: 10\n  }\n})\n\nconst InfoBar = ({ room }) => {\n  const classes = useStyles()\n  return (\n    <AppBar position=\"static\">\n      <Toolbar\n        className={classes.toolBar}\n      >\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n        >\n          {`Комната: ${room}`}\n        </Typography>\n        <Button\n          className={classes.btn}\n          color=\"inherit\"\n          component={Link}\n          to=\"/\"\n        >\n          Выйти\n        </Button>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport { InfoBar }","import React from 'react'\nimport {\n  TextField,\n  makeStyles,\n  IconButton,\n  Icon\n} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n  inputWrapper: {\n    marginTop: 20\n  }\n})\n\nexport const Input = ({ message, setMessage, sendMessage }) => {\n  const classes = useStyles()\n  return (\n    <div\n      className={classes.inputWrapper}\n    >\n      <TextField\n        InputProps={{\n          className: classes.input,\n          endAdornment: (message ? <IconButton color=\"primary\" onClick={event => sendMessage(event)}><Icon>forward</Icon></IconButton> : null)\n        }}\n        fullWidth\n        placeholder=\"Введите сообщение\"\n        variant=\"outlined\"\n        onChange={event => setMessage(event.target.value)}\n        onKeyPress={event => (event.key === 'Enter') ? sendMessage(event) : null}\n        value={message}\n      />\n    </div>\n  )\n}","import React from 'react'\nimport { makeStyles, Avatar, Typography } from '@material-ui/core'\nimport ReactEmoji from 'react-emoji'\n\nconst useStyles = makeStyles({\n  message: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    margin: '10px 0',\n    alignItems: 'center',\n  },\n  yourMessage: {\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    margin: '10px 0',\n    alignItems: 'center',\n  },\n  text: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    backgroundColor: 'rgba(0,0,0, 0.1)',\n    padding: 5,\n    borderRadius: 4,\n    wordBreak: 'break-word'\n  },\n  yourText: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    backgroundColor: '#3f51b5',\n    color: '#FFFFFF',\n    padding: 5,\n    borderRadius: 4,\n    wordBreak: 'break-word'\n  },\n  avatar: {\n    margin: '0 10px'\n  },\n  caption: {\n    margin: '0 10px'\n  }\n})\n\nexport const Message = ({ message: { user, text }, name }) => {\n  const classes = useStyles()\n  const trimmedName = name.trim().toLowerCase()\n  return (\n  <div\n    className={user === trimmedName ? classes.yourMessage : classes.message}\n  >\n    <Avatar\n      className={classes.avatar}\n    >{user[0].toUpperCase()}</Avatar>\n    <Typography\n      variant=\"body1\"\n      className={user === trimmedName ? classes.yourText : classes.text}\n    >\n      {ReactEmoji.emojify(text)}\n    </Typography>\n    <Typography\n      className={classes.caption}\n      variant=\"caption\"\n    >\n      {user}\n    </Typography>\n  </div>\n)}","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nimport ScrollToBottom from 'react-scroll-to-bottom'\nimport { Message } from '../../Message/Message'\n\nconst useStyles = makeStyles({\n  root: {\n    border: '1px solid rgba(0,0,0, 0.1)',\n    borderRadius: 4,\n    marginTop: 5,\n    height: 500,\n    overflow: 'hidden'\n  },\n  toBottonBtn: {\n    position: 'absolute',\n    bottom: 5,\n    left: '50%',\n    transform: 'translateX(-50%)',\n    width: 60\n  }\n})\n\nexport const Messages = ({ messages, name }) => {\n  const classes = useStyles()\n  return (\n    <ScrollToBottom\n      followButtonClassName={classes.toBottonBtn}\n      className={classes.root}\n    >\n\n      {messages.map((message, index) => (<Message key={`${message.text}_${index}`} name={name} message={message} />))}\n    </ScrollToBottom>\n  )\n}","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport { Join } from './components/Join/Join' \nimport { Chat } from './components/Chat/Chat' \n\nconst App = () => (\n  <Router>\n    <Route path=\"/\" exact component={Join} />\n    <Route path=\"/chat\" component={Chat} />\n  </Router>\n)\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}